* WASM Actions
#+BEGIN: clocktable :scope subtree :maxlevel 2
#+CAPTION: Clock summary at [2022-09-11 su 17:02]
| Headline                                     | Time    |      |
|----------------------------------------------+---------+------|
| *Total time*                                 | *10:47* |      |
|----------------------------------------------+---------+------|
| WASM Actions                                 | 10:47   |      |
| \_  Set up development environment           |         | 0:56 |
| \_  Define project goals                     |         | 0:49 |
| \_  Set up testing frameworks                |         | 0:17 |
| \_  Create initial README                    |         | 0:12 |
| \_  Investigate WASM support in Node         |         | 1:37 |
| \_  Create a basic WASI application in Rust  |         | 0:41 |
| \_  Create a test WASM program and run it... |         | 1:37 |
| \_  Set up a CI system that runs frontend... |         | 0:19 |
| \_  Studied WebAssembly fundamentals         |         | 3:26 |
| \_  Process a single HTTP request inside...  |         | 0:53 |
#+END:

** DONE Set up development environment
:LOGBOOK:
CLOCK: [2022-09-03 la 16:00]--[2022-09-03 la 16:56] =>  0:56
:END:
** DONE Define project goals
:LOGBOOK:
CLOCK: [2022-09-03 la 16:59]--[2022-09-03 la 17:48] =>  0:49
:END:

** DONE Set up testing frameworks
:LOGBOOK:
CLOCK: [2022-09-05 ma 19:00]--[2022-09-05 ma 19:17] =>  0:17
:END:
** DONE Create initial README
:LOGBOOK:
CLOCK: [2022-09-05 ma 19:20]--[2022-09-05 ma 19:32] =>  0:12
:END:
** DONE Investigate WASM support in Node
:LOGBOOK:
CLOCK: [2022-09-06 ti 19:16]--[2022-09-06 ti 20:53] =>  1:37
:END:
https://nodejs.dev/en/learn/nodejs-with-webassembly/
https://nodejs.org/api/wasi.html
https://medium.com/geekculture/webassembly-for-node-js-13ef6bec0a0
https://rustwasm.github.io/docs/wasm-bindgen/examples/index.html
Read --> Programming WebAssembly with Rust
https://medium.com/@shyamsundarb/wasm-wasi-wagi-web-assembly-modules-in-rust-af7335e80160
** DONE Create a basic WASI application in Rust
:LOGBOOK:
CLOCK: [2022-09-07 Wed 14:39]--[2022-09-07 Wed 15:20] =>  0:41
:END:
** DONE Create a test WASM program and run it from the backend
:LOGBOOK:
CLOCK: [2022-09-10 la 17:12]--[2022-09-10 la 18:49] =>  1:37
:END:
** DONE Set up a CI system that runs frontend and backend tests
:LOGBOOK:
CLOCK: [2022-09-10 la 16:51]--[2022-09-10 la 17:10] =>  0:19
:END:
** STRT Studied WebAssembly fundamentals
:LOGBOOK:
CLOCK: [2022-09-11 su 16:34]--[2022-09-11 su 17:00] =>  0:26
CLOCK: [2022-09-11 su 10:03]--[2022-09-11 su 13:03] =>  3:00
:END:
** DONE Process a single HTTP request inside a WASM workload and return response
:LOGBOOK:
CLOCK: [2022-09-11 su 15:39]--[2022-09-11 su 16:32] =>  0:53
:END:

** TODO Implement basic JWT authentication
** TODO Select and set up a database
** TODO Implement login on frontend
** TODO Implement uploading a WASM module

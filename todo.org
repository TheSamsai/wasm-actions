* WASM Actions
#+BEGIN: clocktable :scope subtree :maxlevel 2
#+CAPTION: Clock summary at [2022-09-05 ma 19:32]
| Headline                             | Time   |      |
|--------------------------------------+--------+------|
| *Total time*                         | *2:14* |      |
|--------------------------------------+--------+------|
| WASM Actions                         | 2:14   |      |
| \_  Set up development environment   |        | 0:56 |
| \_  Define project goals             |        | 0:49 |
| \_  Set up testing frameworks for... |        | 0:17 |
| \_  Create initial README            |        | 0:12 |
#+END:

** DONE Set up development environment
:LOGBOOK:
CLOCK: [2022-09-03 la 16:00]--[2022-09-03 la 16:56] =>  0:56
:END:
** DONE Define project goals
:LOGBOOK:
CLOCK: [2022-09-03 la 16:59]--[2022-09-03 la 17:48] =>  0:49
:END:

** DONE Set up testing frameworks for frontend and backend
:LOGBOOK:
CLOCK: [2022-09-05 ma 19:00]--[2022-09-05 ma 19:17] =>  0:17
:END:
** DONE Create initial README
:LOGBOOK:
CLOCK: [2022-09-05 ma 19:20]--[2022-09-05 ma 19:32] =>  0:12
:END:
** STRT Investigate WASM support in Node
:LOGBOOK:
CLOCK: [2022-09-06 ti 19:16]--[2022-09-06 ti 20:53] =>  1:37
:END:
https://nodejs.dev/en/learn/nodejs-with-webassembly/
https://nodejs.org/api/wasi.html
https://medium.com/geekculture/webassembly-for-node-js-13ef6bec0a0
https://rustwasm.github.io/docs/wasm-bindgen/examples/index.html
Read --> Programming WebAssembly with Rust
https://medium.com/@shyamsundarb/wasm-wasi-wagi-web-assembly-modules-in-rust-af7335e80160
** TODO Set up a CI system that runs frontend and backend tests
** TODO Create a test WASM program and run it from the backend
** TODO Process a single HTTP request inside a WASM workload and return response
